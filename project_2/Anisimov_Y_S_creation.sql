CREATE TYPE "gender" AS ENUM (
  'F',
  'Femal',
  'Female',
  'M',
  'Male',
  'U'
);

CREATE TYPE "job_industry_category" AS ENUM (
  'Argiculture',
  'Entertainment',
  'Financial Services',
  'Health',
  'IT',
  'Manufacturing',
  'n/a',
  'Property',
  'Retail',
  'Telecommunications'
);

CREATE TYPE "wealth_segment" AS ENUM (
  'Affluent Customer',
  'High Net Worth',
  'Mass Customer'
);

CREATE TYPE "state" AS ENUM (
  'New South Wales',
  'NSW',
  'QLD',
  'Victoria',
  'VIC'
);

CREATE TYPE "country" AS ENUM (
  'Australia'
);

CREATE TYPE "brand" AS ENUM (
  'Giant Bicycles',
  'Norco Bicycles',
  'OHM Cycles',
  'Solex',
  'Trek Bicycles',
  'WeareA2B'
);

CREATE TYPE "product_line" AS ENUM (
  'Mountain',
  'Road',
  'Standard',
  'Touring'
);

CREATE TYPE "product_class" AS ENUM (
  'high',
  'low',
  'medium'
);

CREATE TYPE "product_size" AS ENUM (
  'large',
  'medium',
  'small'
);

CREATE TYPE "order_status" AS ENUM (
  'Approved',
  'Cancelled'
);

CREATE TABLE "customers" (
  "customer_id" integer PRIMARY KEY,
  "first_name" varchar not null,
  "last_name" varchar not null,
  "gender" gender not null,
  "DOB" date null,
  "job_title" varchar null,
  "job_industry_category" job_industry_category not null,
  "wealth_segment" wealth_segment not null,
  "deceased_indicator" boolean not null,
  "owns_car" boolean not null,
  "address" varchar not null,
  "postcode" integer not null,
  "state" state not null,
  "country" country not null,
  "property_valuation" smallint not null
);

CREATE TABLE "items" (
  "item_id" integer generated by default as identity primary key,
  "brand" brand not null,
  "product_line" product_line not null,
  "product_class" product_class not null,
  "product_size" product_size not null,
  UNIQUE (brand, product_line, product_class, product_size)
);

CREATE TABLE "offers" (
  "offer_id" integer generated by default as identity primary key,
  "item_id" integer null,
  "product_id" integer not null,
  "standard_cost" decimal(11,7) null,
  "transaction_date" date not null,
  UNIQUE (product_id, standard_cost, transaction_date)
);

CREATE TABLE "transactions" (
  "transaction_id" integer PRIMARY KEY,
  "customer_id" integer not null,
  "offer_id" integer not null,
  "online_order" boolean null,
  "order_status" order_status not null,
  "list_price" decimal(6,2) not null
);

ALTER TABLE "transactions" ADD FOREIGN KEY ("customer_id") REFERENCES "customers" ("customer_id");

ALTER TABLE "transactions" ADD FOREIGN KEY ("offer_id") REFERENCES "offers" ("offer_id");

ALTER TABLE "offers" ADD FOREIGN KEY ("item_id") REFERENCES "items" ("item_id");
